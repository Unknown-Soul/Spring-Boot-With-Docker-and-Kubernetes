# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-gateway-app
  namespace: default
  labels:
    app: cloud-gateway-app
spec:
  selector:
    matchLabels:
      app: cloud-gateway-app
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cloud-gateway-app
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name: cloud-gateway-app
        image: myjob:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: cloud-gateway-app
              key: DB_HOST
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: cloud-gateway-app
              key: MSSQL_SA_PASSWORD
        ports:
        - containerPort: 80
          name: cloud-gateway-app
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Taipei
      restartPolicy: Always
---
